apiVersion: v1
kind: Service
metadata:
  name: mgo-svc
  labels:
    app: mgo-app
spec:
  selector:
    app: mgo
  ports:
    - name: mgo
      port: 27017
      targetPort: 27017
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mgo
spec:
  selector:
    matchLabels:
      app: mgo
  replicas: 2
  template:
    metadata:
      labels:
        app: mgo
    spec:
      containers:
        - name: mgo
          image: docker.io/library/mongo:6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mgo-secret
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mgo-secret
          args: ["--tlsMode=requireTLS", "--tlsCertificateKeyFile=/opt/tls/cert.pem"]
          ports:
            - name: mgo
              containerPort: 27017
          command:
          - mongod
          - "--replSet"
          - rs1
          - "--bind_ip_all"
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: mgo-volume
              mountPath: /data/db
            - name: tls-certs
              mountPath: /opt/tls
      volumes:
        - name: tls-certs
          secret:
            secretName: mgo-tls
  volumeClaimTemplates:
    - metadata:
        name: mgo-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: managed-nfs-storage
        resources:
          requests:
            storage: 2Gi