apiVersion: v1
kind: Service
metadata:
  name: mgo
spec:
  selector:
    app: mgo
  ports:
    - name: mgo
      port: 27017
      targetPort: 27017
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mgo
spec:
  selector:
    matchLabels:
      app: mgo
  replicas: 2
  template:
    metadata:
      labels:
        app: mgo
    spec:
      initContainers:
      - name: init-certs
        image: busybox
        command: ["sh", "-c", "chown -R 999:999 /opt/tls"]
        volumeMounts:
        - name: mgo-tls
          mountPath: /opt/tls
      containers:
        - name: mgo
          image: docker.io/library/mongo:6
          args:
            - --config
            - /etc/mongo/mongod.conf
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mgo-secret
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mgo-secret
          ports:
            - name: mgo
              containerPort: 27017
          volumeMounts:
            - name: mgo-volume
              mountPath: /data/db
            - name: mongo-config
              mountPath: /etc/mongo
            - name: tls-certs
              mountPath: /opt/tls
              readOnly: false
      volumes:
        - name: mongo-config
          configMap:
            name: mongo-config
        - name: tls-certs
          secret:
            secretName: mgo-tls
            defaultMode: 0640
  volumeClaimTemplates:
    - metadata:
        name: mgo-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: managed-nfs-storage
        resources:
          requests:
            storage: 2Gi